{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\saumi\\\\PycharmProjects\\\\OOP\\\\Higher\\\\color-extractor\\\\frontend\\\\src\\\\components\\\\ImageUpload.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ImageUpload = () => {\n  _s();\n  const [image, setImage] = useState(null);\n  const [isUploading, setIsUploading] = useState(false);\n  const [colors, setColors] = useState([]);\n  const handleImageChange = e => {\n    const file = e.target.files[0];\n    if (file) {\n      setImage(URL.createObjectURL(file)); // Display the selected image\n    }\n  };\n  const handleUpload = async () => {\n    if (!image) return;\n    setIsUploading(true);\n    const formData = new FormData();\n    formData.append('image', document.getElementById('image-input').files[0]);\n    try {\n      const response = await fetch('http://127.0.0.1:5000/upload', {\n        method: 'POST',\n        body: formData\n      });\n      const result = await response.json();\n      if (response.ok) {\n        setColors(result.top_colors); // Assuming 'top_colors' is an array of unique RGB tuples\n      } else {\n        alert('Error: ' + result.error);\n      }\n    } catch (error) {\n      alert('Error uploading image: ' + error.message);\n    } finally {\n      setIsUploading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"upload-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"upload-btn\",\n        htmlFor: \"image-input\",\n        children: \"Select Image\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        id: \"image-input\",\n        accept: \"image/*\",\n        onChange: handleImageChange,\n        style: {\n          display: 'none'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), image && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"image-preview\",\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: image,\n        alt: \"Selected\",\n        style: {\n          width: '100%',\n          maxWidth: '300px',\n          marginTop: '10px',\n          borderRadius: '8px'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }, this), image && /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleUpload,\n      disabled: isUploading,\n      style: {\n        marginTop: '15px'\n      },\n      children: isUploading ? 'Uploading...' : 'Upload Image'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }, this), colors.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"color-palette\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Top Colors:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"palette\",\n        children: colors.map((color, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            backgroundColor: `rgb(${color[0]}, ${color[1]}, ${color[2]})`,\n            width: '40px',\n            height: '40px',\n            margin: '5px',\n            borderRadius: '4px'\n          }\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n};\n_s(ImageUpload, \"V7TDPyhLwFw6RbfOdlGSxhyaoKg=\");\n_c = ImageUpload;\nexport default ImageUpload;\nvar _c;\n$RefreshReg$(_c, \"ImageUpload\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","ImageUpload","_s","image","setImage","isUploading","setIsUploading","colors","setColors","handleImageChange","e","file","target","files","URL","createObjectURL","handleUpload","formData","FormData","append","document","getElementById","response","fetch","method","body","result","json","ok","top_colors","alert","error","message","className","children","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","type","id","accept","onChange","style","display","src","alt","width","maxWidth","marginTop","borderRadius","onClick","disabled","length","map","color","index","backgroundColor","height","margin","_c","$RefreshReg$"],"sources":["C:/Users/saumi/PycharmProjects/OOP/Higher/color-extractor/frontend/src/components/ImageUpload.js"],"sourcesContent":["import React, { useState } from 'react';\r\n\r\nconst ImageUpload = () => {\r\n  const [image, setImage] = useState(null);\r\n  const [isUploading, setIsUploading] = useState(false);\r\n  const [colors, setColors] = useState([]);\r\n\r\n  const handleImageChange = (e) => {\r\n    const file = e.target.files[0];\r\n    if (file) {\r\n      setImage(URL.createObjectURL(file)); // Display the selected image\r\n    }\r\n  };\r\n\r\n  const handleUpload = async () => {\r\n    if (!image) return;\r\n    setIsUploading(true);\r\n\r\n    const formData = new FormData();\r\n    formData.append('image', document.getElementById('image-input').files[0]);\r\n\r\n    try {\r\n      const response = await fetch('http://127.0.0.1:5000/upload', {\r\n        method: 'POST',\r\n        body: formData,\r\n      });\r\n      const result = await response.json();\r\n      if (response.ok) {\r\n        setColors(result.top_colors); // Assuming 'top_colors' is an array of unique RGB tuples\r\n      } else {\r\n        alert('Error: ' + result.error);\r\n      }\r\n    } catch (error) {\r\n      alert('Error uploading image: ' + error.message);\r\n    } finally {\r\n      setIsUploading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"upload-container\">\r\n      <div>\r\n        <label className=\"upload-btn\" htmlFor=\"image-input\">\r\n          Select Image\r\n        </label>\r\n        <input\r\n          type=\"file\"\r\n          id=\"image-input\"\r\n          accept=\"image/*\"\r\n          onChange={handleImageChange}\r\n          style={{ display: 'none' }}\r\n        />\r\n      </div>\r\n\r\n      {/* Display the selected image */}\r\n      {image && (\r\n        <div className=\"image-preview\">\r\n          <img\r\n            src={image}\r\n            alt=\"Selected\"\r\n            style={{ width: '100%', maxWidth: '300px', marginTop: '10px', borderRadius: '8px' }}\r\n          />\r\n        </div>\r\n      )}\r\n\r\n      {/* Upload button now below the image */}\r\n      {image && (\r\n        <button onClick={handleUpload} disabled={isUploading} style={{ marginTop: '15px' }}>\r\n          {isUploading ? 'Uploading...' : 'Upload Image'}\r\n        </button>\r\n      )}\r\n\r\n      {/* Display color palette */}\r\n      {colors.length > 0 && (\r\n        <div className=\"color-palette\">\r\n          <h3>Top Colors:</h3>\r\n          <div className=\"palette\">\r\n            {colors.map((color, index) => (\r\n              <div\r\n                key={index}\r\n                style={{\r\n                  backgroundColor: `rgb(${color[0]}, ${color[1]}, ${color[2]})`,\r\n                  width: '40px',\r\n                  height: '40px',\r\n                  margin: '5px',\r\n                  borderRadius: '4px',\r\n                }}\r\n              ></div>\r\n            ))}\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ImageUpload;\r\n\r\n\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}