{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\saumi\\\\PycharmProjects\\\\OOP\\\\Higher\\\\color-extractor\\\\frontend\\\\src\\\\components\\\\ImageUpload.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ImageUpload = () => {\n  _s();\n  const [image, setImage] = useState(null);\n  const [isUploading, setIsUploading] = useState(false);\n  const [colors, setColors] = useState([]);\n  const [hoveredColor, setHoveredColor] = useState(null); // Track hovered color\n\n  // Handle image selection\n  const handleImageChange = e => {\n    const file = e.target.files[0];\n    if (file) {\n      setImage(URL.createObjectURL(file)); // Display the selected image\n    }\n  };\n\n  // Handle image upload\n  const handleUpload = async () => {\n    if (!image) return;\n    setIsUploading(true);\n    const formData = new FormData();\n    formData.append('image', document.getElementById('image-input').files[0]);\n    try {\n      const response = await fetch('http://127.0.0.1:5000/upload', {\n        method: 'POST',\n        body: formData\n      });\n      const result = await response.json();\n      if (response.ok) {\n        setColors(result.top_colors); // Assuming 'top_colors' is an array of RGB tuples\n      } else {\n        alert('Error: ' + result.error);\n      }\n    } catch (error) {\n      alert('Error uploading image: ' + error.message);\n    } finally {\n      setIsUploading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"upload-container\",\n    style: {\n      textAlign: 'center',\n      marginTop: '20px'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"upload-btn\",\n        htmlFor: \"image-input\",\n        style: styles.uploadBtn,\n        children: \"Select Image\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        id: \"image-input\",\n        accept: \"image/*\",\n        onChange: handleImageChange,\n        style: {\n          display: 'none'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), image && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"image-preview\",\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: image,\n        alt: \"Selected\",\n        style: styles.imagePreview\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }, this), image && /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleUpload,\n      disabled: isUploading,\n      style: styles.uploadBtn,\n      children: isUploading ? 'Uploading...' : 'Upload Image'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }, this), colors.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"color-palette\",\n      style: styles.colorPalette,\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Top Colors:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: styles.paletteContainer,\n        children: colors.map((color, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          onMouseEnter: () => setHoveredColor(`rgb(${color[0]}, ${color[1]}, ${color[2]})`),\n          onMouseLeave: () => setHoveredColor(null),\n          style: {\n            ...styles.colorBox,\n            backgroundColor: `rgb(${color[0]}, ${color[1]}, ${color[2]})`\n          },\n          children: hoveredColor === `rgb(${color[0]}, ${color[1]}, ${color[2]})` && /*#__PURE__*/_jsxDEV(\"div\", {\n            style: styles.tooltip,\n            children: `rgb(${color[0]}, ${color[1]}, ${color[2]})`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 19\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n};\n\n// Inline Styles\n_s(ImageUpload, \"edgJ3O3W3UWvBnYszFYJdyLuJz8=\");\n_c = ImageUpload;\nconst styles = {\n  uploadBtn: {\n    backgroundColor: '#4CAF50',\n    color: 'white',\n    padding: '10px 20px',\n    fontSize: '14px',\n    borderRadius: '5px',\n    cursor: 'pointer',\n    marginTop: '10px',\n    display: 'inline-block'\n  },\n  imagePreview: {\n    width: '100%',\n    maxWidth: '300px',\n    marginTop: '10px',\n    borderRadius: '8px',\n    border: '2px solid #ccc'\n  },\n  colorPalette: {\n    marginTop: '20px'\n  },\n  paletteContainer: {\n    display: 'flex',\n    flexWrap: 'wrap',\n    justifyContent: 'center',\n    marginTop: '10px'\n  },\n  colorBox: {\n    width: '50px',\n    height: '50px',\n    margin: '5px',\n    borderRadius: '4px',\n    border: '2px solid #000',\n    boxSizing: 'border-box',\n    position: 'relative',\n    cursor: 'pointer'\n  },\n  tooltip: {\n    position: 'absolute',\n    bottom: '60px',\n    left: '50%',\n    transform: 'translateX(-50%)',\n    backgroundColor: '#333',\n    color: '#fff',\n    padding: '4px 8px',\n    borderRadius: '4px',\n    fontSize: '12px',\n    whiteSpace: 'nowrap',\n    zIndex: 1000\n  }\n};\nexport default ImageUpload;\nvar _c;\n$RefreshReg$(_c, \"ImageUpload\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","ImageUpload","_s","image","setImage","isUploading","setIsUploading","colors","setColors","hoveredColor","setHoveredColor","handleImageChange","e","file","target","files","URL","createObjectURL","handleUpload","formData","FormData","append","document","getElementById","response","fetch","method","body","result","json","ok","top_colors","alert","error","message","className","style","textAlign","marginTop","children","htmlFor","styles","uploadBtn","fileName","_jsxFileName","lineNumber","columnNumber","type","id","accept","onChange","display","src","alt","imagePreview","onClick","disabled","length","colorPalette","paletteContainer","map","color","index","onMouseEnter","onMouseLeave","colorBox","backgroundColor","tooltip","_c","padding","fontSize","borderRadius","cursor","width","maxWidth","border","flexWrap","justifyContent","height","margin","boxSizing","position","bottom","left","transform","whiteSpace","zIndex","$RefreshReg$"],"sources":["C:/Users/saumi/PycharmProjects/OOP/Higher/color-extractor/frontend/src/components/ImageUpload.js"],"sourcesContent":["import React, { useState } from 'react';\r\n\r\nconst ImageUpload = () => {\r\n  const [image, setImage] = useState(null);\r\n  const [isUploading, setIsUploading] = useState(false);\r\n  const [colors, setColors] = useState([]);\r\n  const [hoveredColor, setHoveredColor] = useState(null); // Track hovered color\r\n\r\n  // Handle image selection\r\n  const handleImageChange = (e) => {\r\n    const file = e.target.files[0];\r\n    if (file) {\r\n      setImage(URL.createObjectURL(file)); // Display the selected image\r\n    }\r\n  };\r\n\r\n  // Handle image upload\r\n  const handleUpload = async () => {\r\n    if (!image) return;\r\n    setIsUploading(true);\r\n\r\n    const formData = new FormData();\r\n    formData.append('image', document.getElementById('image-input').files[0]);\r\n\r\n    try {\r\n      const response = await fetch('http://127.0.0.1:5000/upload', {\r\n        method: 'POST',\r\n        body: formData,\r\n      });\r\n      const result = await response.json();\r\n      if (response.ok) {\r\n        setColors(result.top_colors); // Assuming 'top_colors' is an array of RGB tuples\r\n      } else {\r\n        alert('Error: ' + result.error);\r\n      }\r\n    } catch (error) {\r\n      alert('Error uploading image: ' + error.message);\r\n    } finally {\r\n      setIsUploading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"upload-container\" style={{ textAlign: 'center', marginTop: '20px' }}>\r\n      {/* File Selection */}\r\n      <div>\r\n        <label className=\"upload-btn\" htmlFor=\"image-input\" style={styles.uploadBtn}>\r\n          Select Image\r\n        </label>\r\n        <input\r\n          type=\"file\"\r\n          id=\"image-input\"\r\n          accept=\"image/*\"\r\n          onChange={handleImageChange}\r\n          style={{ display: 'none' }}\r\n        />\r\n      </div>\r\n\r\n      {/* Display Selected Image */}\r\n      {image && (\r\n        <div className=\"image-preview\">\r\n          <img\r\n            src={image}\r\n            alt=\"Selected\"\r\n            style={styles.imagePreview}\r\n          />\r\n        </div>\r\n      )}\r\n\r\n      {/* Upload Button */}\r\n      {image && (\r\n        <button onClick={handleUpload} disabled={isUploading} style={styles.uploadBtn}>\r\n          {isUploading ? 'Uploading...' : 'Upload Image'}\r\n        </button>\r\n      )}\r\n\r\n      {/* Display Top Colors */}\r\n      {colors.length > 0 && (\r\n        <div className=\"color-palette\" style={styles.colorPalette}>\r\n          <h3>Top Colors:</h3>\r\n          <div style={styles.paletteContainer}>\r\n            {colors.map((color, index) => (\r\n              <div\r\n                key={index}\r\n                onMouseEnter={() => setHoveredColor(`rgb(${color[0]}, ${color[1]}, ${color[2]})`)}\r\n                onMouseLeave={() => setHoveredColor(null)}\r\n                style={{\r\n                  ...styles.colorBox,\r\n                  backgroundColor: `rgb(${color[0]}, ${color[1]}, ${color[2]})`,\r\n                }}\r\n              >\r\n                {/* Tooltip for RGB Value */}\r\n                {hoveredColor === `rgb(${color[0]}, ${color[1]}, ${color[2]})` && (\r\n                  <div style={styles.tooltip}>\r\n                    {`rgb(${color[0]}, ${color[1]}, ${color[2]})`}\r\n                  </div>\r\n                )}\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\n// Inline Styles\r\nconst styles = {\r\n  uploadBtn: {\r\n    backgroundColor: '#4CAF50',\r\n    color: 'white',\r\n    padding: '10px 20px',\r\n    fontSize: '14px',\r\n    borderRadius: '5px',\r\n    cursor: 'pointer',\r\n    marginTop: '10px',\r\n    display: 'inline-block',\r\n  },\r\n  imagePreview: {\r\n    width: '100%',\r\n    maxWidth: '300px',\r\n    marginTop: '10px',\r\n    borderRadius: '8px',\r\n    border: '2px solid #ccc',\r\n  },\r\n  colorPalette: {\r\n    marginTop: '20px',\r\n  },\r\n  paletteContainer: {\r\n    display: 'flex',\r\n    flexWrap: 'wrap',\r\n    justifyContent: 'center',\r\n    marginTop: '10px',\r\n  },\r\n  colorBox: {\r\n    width: '50px',\r\n    height: '50px',\r\n    margin: '5px',\r\n    borderRadius: '4px',\r\n    border: '2px solid #000',\r\n    boxSizing: 'border-box',\r\n    position: 'relative',\r\n    cursor: 'pointer',\r\n  },\r\n  tooltip: {\r\n    position: 'absolute',\r\n    bottom: '60px',\r\n    left: '50%',\r\n    transform: 'translateX(-50%)',\r\n    backgroundColor: '#333',\r\n    color: '#fff',\r\n    padding: '4px 8px',\r\n    borderRadius: '4px',\r\n    fontSize: '12px',\r\n    whiteSpace: 'nowrap',\r\n    zIndex: 1000,\r\n  },\r\n};\r\n\r\nexport default ImageUpload;\r\n\r\n\r\n\r\n\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}